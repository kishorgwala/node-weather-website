import React from 'react';
import { render, waitFor, screen } from '@testing-library/react';
import axios from 'axios';
import MyComponent from './MyComponent';

jest.mock('axios');

describe('MyComponent', () => {
  afterEach(() => {
    jest.clearAllMocks();
  });

  test('renders loading when fetching data', async () => {
    axios.get.mockResolvedValueOnce({ data: [{ name: 'John' }, { name: 'Doe' }] });

    render(<MyComponent />);

    expect(screen.getByText('Loading')).toBeInTheDocument();

    await waitFor(() => {
      expect(screen.queryByText('Loading')).toBeNull();
      expect(screen.getByText('Doing stuff with data')).toBeInTheDocument();
    });

    expect(screen.getByText('John')).toBeInTheDocument();
    expect(screen.getByText('Doe')).toBeInTheDocument();
  });

  test('renders error message when fetch fails', async () => {
    axios.get.mockRejectedValueOnce(new Error('Failed to fetch'));

    render(<MyComponent />);

    expect(screen.getByText('Loading')).toBeInTheDocument();

    await waitFor(() => {
      expect(screen.queryByText('Loading')).toBeNull();
      expect(screen.getByText('Error: Failed to fetch')).toBeInTheDocument();
    });

    expect(screen.queryByText('Doing stuff with data')).toBeNull();
  });
});
