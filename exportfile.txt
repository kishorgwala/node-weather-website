import React from 'react';
import { render, waitFor, screen } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import DisplayInvestmentNavCh from './DisplayInvestmentNavCh';

jest.mock('axios', () => ({
  get: jest.fn(() => Promise.resolve({ data: [] })),
}));

describe('DisplayInvestmentNavCh', () => {
  it('renders loading state initially', async () => {
    render(<DisplayInvestmentNavCh />);

    expect(screen.getByText('Fetching Data...')).toBeInTheDocument();
  });

  it('renders error message when there is an error', async () => {
    jest.spyOn(console, 'error').mockImplementation(() => {});

    axios.get.mockRejectedValueOnce(new Error('Network Error'));

    render(<DisplayInvestmentNavCh />);

    await waitFor(() => {
      expect(screen.getByText('Refreshing your Authentication Token')).toBeInTheDocument();
    });
  });

  it('renders data when loaded', async () => {
    const mockData = [
      {
        currency: 'USD',
        isin: '1234567890',
        securityname: 'Security 1',
        fundRegion: 'US',
      },
      {
        currency: 'EUR',
        isin: '0987654321',
        securityname: 'Security 2',
        fundRegion: 'Europe',
      },
    ];

    axios.get.mockResolvedValueOnce({ data: mockData });

    render(<DisplayInvestmentNavCh />);

    await waitFor(() => {
      expect(screen.getByText('Investment Navigator CH')).toBeInTheDocument();
      expect(screen.getByText('USD')).toBeInTheDocument();
      expect(screen.getByText('Security 1')).toBeInTheDocument();
      expect(screen.getByText('EUR')).toBeInTheDocument();
      expect(screen.getByText('Security 2')).toBeInTheDocument();
    });
  });
});
