import { useState, useCallback } from 'react';
import axios from 'axios';

const useFetchData = () => {
  const [data, setData] = useState(null);
  const [error, setError] = useState(null);

  const fetchData = useCallback(async (url) => {
    try {
      const response = await axios.get(url);
      setData(response.data);
    } catch (err) {
      setError(err);
    }
  }, []);

  return { data, error, fetchData };
};

export default useFetchData;


--------------------------------------------------------------------------------------------------------------------------------

import React, { useEffect } from 'react';
import useFetchData from './useFetchData';

const FetchDataComponent = () => {
  const { data: data1, error: error1, fetchData: fetchData1 } = useFetchData();
  const { data: data2, error: error2, fetchData: fetchData2 } = useFetchData();

  useEffect(() => {
    const fetchData = async () => {
      await fetchData1('https://api.example.com/endpoint1');
    };
    fetchData();
  }, [fetchData1]); // Fetch data1 when the component mounts

  useEffect(() => {
    const fetchData = async () => {
      if (data1) {
        await fetchData2(`https://api.example.com/endpoint2/${data1.id}`);
      }
    };
    fetchData();
  }, [data1, fetchData2]); // Fetch data2 when data1 is available

  if (error1) {
    return <div>Error: {error1.message}</div>;
  }

  if (error2) {
    return <div>Error: {error2.message}</div>;
  }

  if (!data1 || !data2) {
    return <div>Loading...</div>;
  }

  return (
    <div>
      <h1>Data from First API Call</h1>
      <pre>{JSON.stringify(data1, null, 2)}</pre>
      <h1>Data from Second API Call</h1>
      <pre>{JSON.stringify(data2, null, 2)}</pre>
    </div>
  );
};

export default FetchDataComponent;
